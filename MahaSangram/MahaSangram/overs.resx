<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        oqfJof/Z
</value>
  </data>
</root>